{
  "_args": [
    [
      {
        "raw": "vcap_services@~0.3.0",
        "scope": null,
        "escapedName": "vcap_services",
        "name": "vcap_services",
        "rawSpec": "~0.3.0",
        "spec": ">=0.3.0 <0.4.0",
        "type": "range"
      },
      "C:\\Users\\garre_000\\git\\chord-gen\\node_modules\\watson-developer-cloud"
    ]
  ],
  "_from": "vcap_services@>=0.3.0 <0.4.0",
  "_id": "vcap_services@0.3.4",
  "_inCache": true,
  "_location": "/vcap_services",
  "_nodeVersion": "7.5.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/vcap_services-0.3.4.tgz_1492102165005_0.357511427719146"
  },
  "_npmUser": {
    "name": "germanattanasio",
    "email": "germanattanasio@gmail.com"
  },
  "_npmVersion": "4.1.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "vcap_services@~0.3.0",
    "scope": null,
    "escapedName": "vcap_services",
    "name": "vcap_services",
    "rawSpec": "~0.3.0",
    "spec": ">=0.3.0 <0.4.0",
    "type": "range"
  },
  "_requiredBy": [
    "/watson-developer-cloud"
  ],
  "_resolved": "https://registry.npmjs.org/vcap_services/-/vcap_services-0.3.4.tgz",
  "_shasum": "154bf940402512acca23df2263fc60ef66845ada",
  "_shrinkwrap": null,
  "_spec": "vcap_services@~0.3.0",
  "_where": "C:\\Users\\garre_000\\git\\chord-gen\\node_modules\\watson-developer-cloud",
  "author": {
    "name": "German Attanasio Ruiz",
    "email": "germanattanasio@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/germanattanasio/vcap_services/issues"
  },
  "dependencies": {},
  "description": "Parse and return service credentials from VCAP_SERVICES.",
  "devDependencies": {
    "coveralls": "~2.12.0",
    "istanbul": "~0.4.5",
    "jshint": "~2.9.4",
    "mocha": "~3.2.0"
  },
  "directories": {},
  "dist": {
    "shasum": "154bf940402512acca23df2263fc60ef66845ada",
    "tarball": "https://registry.npmjs.org/vcap_services/-/vcap_services-0.3.4.tgz"
  },
  "gitHead": "412d5496d8c59e38f905ab3089cc5c18156348ab",
  "homepage": "https://github.com/germanattanasio/vcap_services#readme",
  "keywords": [
    "bluemix",
    "vcap_services",
    "cloud-foundry"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "germanattanasio",
      "email": "germanattanasio@gmail.com"
    }
  ],
  "name": "vcap_services",
  "optionalDependencies": {},
  "readme": "# VCAP_SERVICES\n\n[![Build Status](https://travis-ci.org/germanattanasio/vcap-services.svg?branch=master)](http://travis-ci.org/germanattanasio/vcap-services)\n[![Coverage Status](https://coveralls.io/repos/germanattanasio/vcap-services/badge.svg?branch=master&service=github)](https://coveralls.io/github/germanattanasio/vcap-services?branch=master)\n[![npm-version](https://img.shields.io/npm/v/vcap_services.svg)](https://www.npmjs.com/package/vcap_services)\n[![npm-downloads](https://img.shields.io/npm/dm/vcap_services.svg)](https://www.npmjs.com/package/vcap_services)\n\nParse and return service credentials from `VCAP_SERVICES` environment variable that [Bluemix] provides.\n\n## Installation\n\n```sh\n$ npm install vcap_services --save\n```\n\n## Usage\n\n```sh\nvar vcapServices = require('vcap_services');\nvar credentials = vcapServices.getCredentials('personality_insights');\nconsole.log(credentials);\n```\n\nIf `VCAP_SERVICES` is:\n```json\n{\n  \"personality_insights\": [{\n      \"credentials\": {\n        \"password\": \"<password>\",\n        \"url\": \"<url>\",\n        \"username\": \"<username>\"\n      },\n    \"label\": \"personality_insights\",\n    \"name\": \"personality-insights-service\",\n    \"plan\": \"standard\"\n  }]\n}\n```\n\nOutput:\n```json\n{\n  \"password\": \"<password>\",\n  \"url\": \"<url>\",\n  \"username\": \"<username>\"\n}\n```\n\n### Getting credentials for a specific plan\n\nGet credentials that match a specific service plan (only for `VCAP_SERVICES`).\n```sh\nvar vcapServices = require('vcap_services');\nvar credentials = vcapServices.getCredentials('personality_insights', 'standard');\nconsole.log(credentials);\n```\n\n### Getting credentials for a specific instance\nGet credentials that match a specific service instance (replace \"YOUR NLC NAME\" with the name of your service instance).\n```sh\nvar vcapServices = require('vcap_services');\nvar credentials = vcapServices.getCredentials('natural_language_classifier', null, 'YOUR NLC NAME');\nconsole.log(credentials);\n```\n\n### Getting credentials for a specific plan and instance\nGet credentials that match a specific service plan and instance (replace \"YOUR NLC NAME\" with the name of your service instance).\n```sh\nvar vcapServices = require('vcap_services');\nvar credentials = vcapServices.getCredentials('natural_language_classifier', 'standard', 'YOUR NLC NAME');\nconsole.log(credentials);\n```\n\n## Tests\nRunning all the tests:\n```sh\n$ npm test\n```\n\nRunning a specific test:\n```sh\n$ mocha -g '<test name>'\n```\n\n\n## License\n\nMIT.\n\n## Contributing\nSee [CONTRIBUTING](https://github.com/germanattanasio/vcap-services/blob/master/CONTRIBUTING.md).\n\n[Bluemix]: http://bluemix.net/\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/germanattanasio/vcap_services.git"
  },
  "scripts": {
    "coverage": "istanbul cover ./node_modules/mocha/bin/_mocha --reporter spec --timeout 4000",
    "coveralls": "istanbul cover ./node_modules/mocha/bin/_mocha --report lcovonly -- -R spec && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage",
    "test": "jshint --exclude node_modules/ **/*.js && mocha --reporter spec --timeout 4000"
  },
  "version": "0.3.4"
}
